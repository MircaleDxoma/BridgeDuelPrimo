-- ŸÖÿ™ÿ∫Ÿäÿ±ÿßÿ™ ÿπÿßŸÖÿ©
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- Ÿàÿßÿ¨Ÿáÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "KillAuraAndHackGUI"

-- ========== ÿ≤ÿ± KillAura ==========
local killAuraButton = Instance.new("TextButton")
killAuraButton.Size = UDim2.new(0, 130, 0, 40)
killAuraButton.Position = UDim2.new(0, 20, 0.4, 0)
killAuraButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
killAuraButton.Text = "üéØ KillAura [OFF]"
killAuraButton.TextColor3 = Color3.fromRGB(255, 255, 255)
killAuraButton.Font = Enum.Font.GothamBold
killAuraButton.TextSize = 16
killAuraButton.BorderSizePixel = 0
killAuraButton.AutoButtonColor = false
killAuraButton.Parent = gui

local toggled = false
local ATTACK_RANGE = 20
local cps = 14
local interval = 1 / cps
local lastAttackTime = 0
local currentTarget = nil

local function animateButton(button, on, text)
    local goal = {
        BackgroundColor3 = on and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(30, 30, 30),
        Size = on and UDim2.new(0, 140, 0, 45) or UDim2.new(0, 130, 0, 40),
    }
    local tween = TweenService:Create(button, TweenInfo.new(0.25), goal)
    tween:Play()
    button.Text = text
end

killAuraButton.MouseButton1Click:Connect(function()
    toggled = not toggled
    animateButton(killAuraButton, toggled, toggled and "üéØ KillAura [ON]" or "üéØ KillAura [OFF]")
end)

UIS.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if UIS:IsKeyDown(Enum.KeyCode.LeftControl) and input.KeyCode == Enum.KeyCode.LeftAlt then
        toggled = not toggled
        animateButton(killAuraButton, toggled, toggled and "üéØ KillAura [ON]" or "üéØ KillAura [OFF]")
    end
end)

local function attack()
    local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
    if tool then
        tool:Activate()
    end
end

local function moveToTarget(target)
    if not Character then return end
    local humanoid = Character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end
    if not target or not target:FindFirstChild("HumanoidRootPart") then return end

    -- ÿ™ÿ≠ÿ±ŸÉ ÿ®ÿßÿ™ÿ¨ÿßŸá ÿßŸÑŸáÿØŸÅ (ÿ∑ÿ±ŸäŸÇÿ© ŸÖÿ™ŸàÿßŸÅŸÇÿ© ŸÖÿπ Delta/Solora)
    local targetPos = target.HumanoidRootPart.Position
    humanoid:MoveTo(targetPos)
end

local function findTarget()
    local nearest, minDist = nil, ATTACK_RANGE
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (player.Character.HumanoidRootPart.Position - Character.HumanoidRootPart.Position).Magnitude
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if dist <= minDist and humanoid and humanoid.Health > 0 then
                nearest = player.Character
                minDist = dist
            end
        end
    end
    return nearest
end

RunService.RenderStepped:Connect(function()
    if not toggled then return end
    Character = LocalPlayer.Character
    if not Character or not Character:FindFirstChild("HumanoidRootPart") then return end

    if not currentTarget or not currentTarget:FindFirstChild("HumanoidRootPart") or (currentTarget.HumanoidRootPart.Position - Character.HumanoidRootPart.Position).Magnitude > ATTACK_RANGE then
        currentTarget = findTarget()
    end

    if currentTarget then
        moveToTarget(currentTarget)
        if tick() - lastAttackTime >= interval then
            lastAttackTime = tick()
            attack()
        end
    else
        -- ÿ•ÿ∞ÿß ŸÖÿß ŸÅŸä ŸáÿØŸÅÿå ŸàŸÇŸÅ ÿßŸÑÿ≠ÿ±ŸÉÿ©
        local humanoid = Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:MoveTo(Character.HumanoidRootPart.Position)
        end
    end
end)

-- ========== ÿ≤ÿ± Hack ÿ®ŸÜŸÅÿ≥ ÿ™ÿµŸÖŸäŸÖ KillAura ==========
local hackButton = Instance.new("TextButton")
hackButton.Size = UDim2.new(0, 130, 0, 40)
hackButton.Position = UDim2.new(0, 20, 0.4, 55)
hackButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
hackButton.Text = "üíª Hack [OFF]"
hackButton.TextColor3 = Color3.fromRGB(255, 255, 255)
hackButton.Font = Enum.Font.GothamBold
hackButton.TextSize = 16
hackButton.BorderSizePixel = 0
hackButton.AutoButtonColor = false
hackButton.Parent = gui

local hackEnabled = false
local noclipEnabled = false
local infiniteJumpEnabled = false
local espEnabled = false

local espFolder = Instance.new("Folder")
espFolder.Name = "ESPFolder"

local espObjects = {}

local function noclipLoop()
    while noclipEnabled do
        RunService.Heartbeat:Wait()
        local character = LocalPlayer.Character
        if character then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end
end

UIS.JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

local function updateESP()
    while espEnabled do
        wait(2)  -- ÿ™ÿ≠ÿØŸäÿ´ ŸÉŸÑ ÿ´ÿßŸÜŸäÿ™ŸäŸÜ
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Head") then
                local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
                if humanoid and humanoid.Health > 0 then
                    if not espObjects[plr] then
                        local billboard = Instance.new("BillboardGui")
                        billboard.Adornee = plr.Character.Head
                        billboard.AlwaysOnTop = true
                        billboard.ExtentsOffset = Vector3.new(0, 2, 0)
                        billboard.Size = UDim2.new(0, 100, 0, 40)
                        billboard.Parent = espFolder

                        local label = Instance.new("TextLabel")
                        label.BackgroundTransparency = 1
                        label.Size = UDim2.new(1, 0, 1, 0)
                        label.Text = plr.Name
                        label.TextColor3 = plr.TeamColor.Color
                        label.TextStrokeTransparency = 0.4
                        label.TextStrokeColor3 = Color3.new(0, 0, 0)
                        label.Font = Enum.Font.GothamBold
                        label.TextScaled = true
                        label.Parent = billboard

                        espObjects[plr] = billboard
                    end
                else
                    if espObjects[plr] then
                        espObjects[plr]:Destroy()
                        espObjects[plr] = nil
                    end
                end
            else
                if espObjects[plr] then
                    espObjects[plr]:Destroy()
                    espObjects[plr] = nil
                end
            end
        end

        for plr, guiObj in pairs(espObjects) do
            if not Players:FindFirstChild(plr.Name) or not plr.Character or not plr.Character:FindFirstChild("Head") then
                guiObj:Destroy()
                espObjects[plr] = nil
            end
        end
    end
end

local function toggleESP(state)
    espEnabled = state
    if state then
        espFolder.Parent = game.CoreGui
        coroutine.wrap(updateESP)()
    else
        espFolder.Parent = nil
        for _, guiObj in pairs(espObjects) do
            guiObj:Destroy()
        end
        espObjects = {}
    end
end

hackButton.MouseButton1Click:Connect(function()
    hackEnabled = not hackEnabled
    animateButton(hackButton, hackEnabled, hackEnabled and "üíª Hack [ON]" or "üíª Hack [OFF]")

    noclipEnabled = hackEnabled
    infiniteJumpEnabled = hackEnabled
    toggleESP(hackEnabled)

    if hackEnabled then
        spawn(noclipLoop)
    else
        local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 16
            humanoid.JumpPower = 50
            -- ÿ±ÿ¨ÿπ CanCollide ÿ∑ÿ®ŸäÿπŸä
            for _, part in pairs(LocalPlayer.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end)

UIS.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if UIS:IsKeyDown(Enum.KeyCode.LeftControl) and input.KeyCode == Enum.KeyCode.H then
        hackEnabled = not hackEnabled
        animateButton(hackButton, hackEnabled, hackEnabled and "üíª Hack [ON]" or "üíª Hack [OFF]")

        noclipEnabled = hackEnabled
        infiniteJumpEnabled = hackEnabled
        toggleESP(hackEnabled)

        if hackEnabled then
            spawn(noclipLoop)
        else
            local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 16
                humanoid.JumpPower = 50
                for _, part in pairs(LocalPlayer.Character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                    end
                end
            end
        end
    end
end)
